<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/ptu5/data/cars.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1500"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,4:maincars"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="cars" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="94"/><column index="2" value="94"/><column index="3" value="76"/><column index="4" value="40"/><column index="5" value="42"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL_where_between_and.sql">-- Platesnis WHERE panaudojimas, BETWEEN.... AND....
SELECT * FROM cars WHERE price BETWEEN 10000 AND 30000;
-- galima tikrinti ir pagal sarasa
SELECT * FROM cars WHERE year IN (2005, 2010, 2011) ORDER BY year;
-- paieska tekste
SELECT * FROM cars WHERE make LIKE &quot;T%&quot;;
SELECT * FROM cars WHERE make LIKE &quot;%a&quot;;
SELECT * FROM cars WHERE make LIKE &quot;%t%&quot;;
-- placeholderis - vieno simbolio kozeris
SELECT * FROM cars WHERE model LIKE &quot;__&quot;;
SELECT * FROM cars WHERE model LIKE &quot;X_&quot;;
SELECT * FROM cars WHERE model LIKE &quot;X%&quot;;
SELECT * FROM cars WHERE make LIKE &quot;__n%&quot;;
-- operacijos su NULL
SELECT * FROM cars WHERE color IS NULL;
UPDATE cars SET color=&quot;Ugly&quot; WHERE color IS NULL;
-- Logines salygos AND, OR, NOT
SELECT * FROM cars WHERE make=&quot;Ford&quot; AND price &gt; 40000;
SELECT * FROM cars WHERE price &lt; 40000 OR color=&quot;Pink&quot;;
SELECT * FROM cars WHERE (price &lt; 40000 OR color=&quot;Pink&quot;) AND year &gt; 2000;
SELECT * FROM cars WHERE price &lt; 40000 OR color=&quot;Pink&quot; AND year &gt; 2000;
SELECT * FROM cars WHERE color NOT IN (&quot;Violet&quot;, &quot;Pink&quot;, &quot;Yellow&quot;, &quot;Turquoise&quot;, &quot;Ugly&quot;, &quot;Fuscia&quot;);
-- pirmas (=) antras (NOT) trecias (AND) ketvirtas (OR)
SELECT * FROM cars WHERE (make=&quot;Volvo&quot; OR make=&quot;Ford&quot;) AND price NOT BETWEEN 10000 AND 50000;
-- Rusiavimas
SELECT * FROM cars ORDER BY year;
SELECT * FROM cars ORDER BY year DESC LIMIT 5;
SELECT * FROM cars ORDER BY year DESC LIMIT 5 OFFSET 5;
SELECT * FROM cars ORDER BY make;
-- nekreipti demesio i raidziu dydi
SELECT * FROM cars WHERE make=&quot;TOYOTA&quot; COLLATE NOCASE;
-- rezultatu manipuliavimas su || operatorium
SELECT &quot;Gamintojas: &quot; || make, model FROM cars LIMIT 10;
SELECT &quot;Gamintojas: &quot; || make AS gamintojas, model FROM cars LIMIT 10;
SELECT &quot;Gamintojas: &quot; || make AS gamintojas, model AS modelis FROM cars LIMIT 10;
SELECT make, model, price, round(price/3.4528, 2) as price_euro FROM cars;
SELECT make || &quot; &quot; || model || &quot;, &quot; || year as car_model_year FROM cars ORDER BY year;
-- amziaus skaiciavimas
SELECT make, model, 2022 - year AS age FROM cars ORDER BY age;
SELECT make, model, price, round(price/1.18, 2) as price_ex_VAT FROM cars;
SELECT make, model, price, round(price/1.18, 2) as &quot;price ex VAT&quot; FROM cars ORDER BY &quot;price ex VAT&quot;;
-- Teisingas grupavimas
-- avg() - vidurkis
-- min() - minimum
-- max() - maximum
-- count() - skaiciuoja
-- sum() - sumuoja
SELECT sum(price) FROM cars;
SELECT make, sum(price) FROM cars GROUP BY make;
SELECT avg(year) FROM cars;
SELECT avg(year) FROM cars GROUP BY make;
SELECT make, avg(year), count(*) FROM cars GROUP BY make HAVING count(*) &gt; 1;
SELECT make, avg(price), count(*) FROM cars GROUP BY make HAVING count(*) &gt; 1;
SELECT min(price), max(price), avg(price) FROM cars;
SELECT max(price), make, model FROM cars;
SELECT color, max(price), avg(price), min(price), make, model, count(*) FROM cars GROUP BY color ORDER BY price DESC; 
SELECT color, avg(price), make, model, count(*) FROM cars GROUP BY color ORDER BY price DESC; 
SELECT color, min(price), make, model, count(*) FROM cars GROUP BY color ORDER BY price DESC; 
SELECT color, round(avg(price), 2), make, model, count(*) FROM cars GROUP BY color ORDER BY price DESC; </sql><sql name="SQL 3">-- SELECT make, model, price
-- FROM cars
-- WHERE make NOT IN (&quot;Toyota&quot;, &quot;Mercury&quot;, &quot;Volvo&quot;)
-- GROUP BY price
-- HAVING year &gt; 2007
-- ORDER BY make;
SELECT make, model, year, max(price), color
FROM cars
WHERE make NOT IN (&quot;Toyota&quot;, &quot;Mercury&quot;, &quot;Volvo&quot;)
GROUP BY year
HAVING color NOT IN (&quot;Pink&quot;, &quot;Turquoise&quot;) AND count(*) &gt; 1
ORDER BY year DESC;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
